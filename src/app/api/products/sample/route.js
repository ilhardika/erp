import { NextResponse } from "next/server";
import { connectToDatabase } from "@/lib/mongodb";

// POST - Add sample products
export async function POST() {
  try {
    const { db } = await connectToDatabase();

    // Sample products data
    const sampleProducts = [
      {
        name: "iPhone 15 Pro",
        code: "IPH15PRO001",
        description: "Latest iPhone with Pro camera system and titanium design",
        category: "Electronics",
        price: 15999000,
        cost: 12000000,
        stock: 25,
        minStock: 5,
        unit: "pcs",
        barcode: "012345678901",
        supplier: "Apple Authorized Distributor",
        status: "active",
        weight: 0.187,
        dimensions: { length: 14.67, width: 7.081, height: 0.833 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Samsung Galaxy S24 Ultra",
        code: "SGS24ULTRA002",
        description:
          "Premium Android smartphone with S Pen and advanced camera",
        category: "Electronics",
        price: 18999000,
        cost: 14500000,
        stock: 15,
        minStock: 3,
        unit: "pcs",
        barcode: "012345678902",
        supplier: "Samsung Indonesia",
        status: "active",
        weight: 0.232,
        dimensions: { length: 16.24, width: 7.9, height: 0.86 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "MacBook Pro 14-inch M3",
        code: "MBP14M3003",
        description:
          "Professional laptop with M3 chip and Liquid Retina XDR display",
        category: "Electronics",
        price: 32999000,
        cost: 26000000,
        stock: 8,
        minStock: 2,
        unit: "pcs",
        barcode: "012345678903",
        supplier: "Apple Authorized Distributor",
        status: "active",
        weight: 1.55,
        dimensions: { length: 31.26, width: 22.12, height: 1.55 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Nike Air Jordan 1 Retro High",
        code: "NIKAJ1RH004",
        description:
          "Classic basketball sneakers with premium leather construction",
        category: "Clothing",
        price: 2299000,
        cost: 1600000,
        stock: 50,
        minStock: 10,
        unit: "pcs",
        barcode: "012345678904",
        supplier: "Nike Indonesia",
        status: "active",
        weight: 0.6,
        dimensions: { length: 32, width: 12, height: 11 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Adidas Ultraboost 22",
        code: "ADIUB22005",
        description:
          "High-performance running shoes with Boost midsole technology",
        category: "Clothing",
        price: 2799000,
        cost: 1900000,
        stock: 35,
        minStock: 8,
        unit: "pcs",
        barcode: "012345678905",
        supplier: "Adidas Indonesia",
        status: "active",
        weight: 0.32,
        dimensions: { length: 31, width: 11.5, height: 10 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Kopiko Coffee Candy",
        code: "KPKCNDY006",
        description: "Original coffee candy with real coffee extract",
        category: "Food & Beverage",
        price: 15000,
        cost: 8000,
        stock: 500,
        minStock: 50,
        unit: "pack",
        barcode: "012345678906",
        supplier: "Mayora Indah",
        status: "active",
        weight: 0.175,
        dimensions: { length: 12, width: 8, height: 2 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Indomie Goreng Special",
        code: "INDGSP007",
        description:
          "Indonesia's favorite instant fried noodles with special sauce",
        category: "Food & Beverage",
        price: 3500,
        cost: 2200,
        stock: 1000,
        minStock: 100,
        unit: "pack",
        barcode: "012345678907",
        supplier: "Indofood",
        status: "active",
        weight: 0.085,
        dimensions: { length: 11, width: 8, height: 1.5 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Aqua 600ml",
        code: "AQUA600008",
        description: "Pure drinking water in convenient 600ml bottle",
        category: "Food & Beverage",
        price: 3000,
        cost: 1800,
        stock: 2000,
        minStock: 200,
        unit: "bottle",
        barcode: "012345678908",
        supplier: "Aqua Danone",
        status: "active",
        weight: 0.6,
        dimensions: { length: 20, width: 6, height: 6 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Pilot G2 Gel Pen",
        code: "PILG2009",
        description: "Smooth gel ink pen for comfortable writing experience",
        category: "Office Supplies",
        price: 25000,
        cost: 15000,
        stock: 200,
        minStock: 20,
        unit: "pcs",
        barcode: "012345678909",
        supplier: "Pilot Pen Indonesia",
        status: "active",
        weight: 0.023,
        dimensions: { length: 14.6, width: 1.1, height: 1.1 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: "Paper One A4 80gsm",
        code: "P1A480010",
        description: "High quality copy paper for printing and copying",
        category: "Office Supplies",
        price: 65000,
        cost: 45000,
        stock: 100,
        minStock: 15,
        unit: "ream",
        barcode: "012345678910",
        supplier: "April Fine Paper",
        status: "active",
        weight: 2.5,
        dimensions: { length: 31, width: 21.5, height: 5 },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ];

    // Insert sample products
    const result = await db.collection("products").insertMany(sampleProducts);

    return NextResponse.json({
      success: true,
      message: `Successfully created ${result.insertedCount} sample products`,
      data: {
        insertedCount: result.insertedCount,
        insertedIds: result.insertedIds,
      },
    });
  } catch (error) {
    console.error("Sample products creation error:", error);
    return NextResponse.json(
      { success: false, error: "Failed to create sample products" },
      { status: 500 }
    );
  }
}
